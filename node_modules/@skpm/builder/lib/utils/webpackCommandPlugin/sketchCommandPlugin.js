'use strict';

exports.__esModule = true;
exports.default = SketchCommandPlugin;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _runSketchPlugin = require('run-sketch-plugin');

var _runSketchPlugin2 = _interopRequireDefault(_runSketchPlugin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SketchCommandPlugin(options) {
  return {
    apply(compiler) {
      const { bundleURL, commandIdentifier } = options;

      if (bundleURL && commandIdentifier) {
        compiler.hooks.afterEmit.tapPromise('Run Sketch Command', () => (0, _runSketchPlugin2.default)({
          bundleURL,
          identifier: commandIdentifier
        }).then(res => {
          if (res.stderr) {
            console.error(`${_chalk2.default.red('error')} Error while running the command after build`);
            console.error(res.stderr);
          }
          res.stdout.split('\\n').map(line => console.log(line));
        }).catch(err => {
          console.error(`${_chalk2.default.red('error')} Error while running the command after build`);
          console.error(err);
          throw err;
        }));
      }
    }
  };
}