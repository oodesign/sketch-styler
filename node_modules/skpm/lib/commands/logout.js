'use strict';

exports.__esModule = true;

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

var _asyncCommand = require('../utils/async-command');

var _asyncCommand2 = _interopRequireDefault(_asyncCommand);

var _auth = require('../utils/auth');

var _auth2 = _interopRequireDefault(_auth);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = (0, _asyncCommand2.default)({
  command: 'logout',

  desc: 'Remove the github access token from the keychain',

  handler() {
    return _asyncToGenerator(function* () {
      const spinner = (0, _ora2.default)({
        text: 'Deleting github token',
        color: 'magenta'
      }).start();

      try {
        yield _auth2.default.deleteToken();
      } catch (err) {
        spinner.fail(`Error while deleting token`);
        throw err;
      }

      spinner.succeed('Token deleted!');
    })();
  }
});