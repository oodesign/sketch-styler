'use strict';

exports.__esModule = true;

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

var _inquirer = require('inquirer');

var _asyncCommand = require('../utils/async-command');

var _asyncCommand2 = _interopRequireDefault(_asyncCommand);

var _auth = require('../utils/auth');

var _auth2 = _interopRequireDefault(_auth);

var _github = require('../utils/github');

var _github2 = _interopRequireDefault(_github);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = (0, _asyncCommand2.default)({
  command: 'login [token]',

  desc: 'Enter your GitHub access token and save it in the keychain.\n This token will be used to publish new releases on the repo.\nThe token needs the `repo` permissions in order to create releases. It will not be used for anything else.\n\nYou can create a new token here: https://github.com/settings/tokens/new',

  handler(argv) {
    return _asyncToGenerator(function* () {
      if (!argv.token) {
        const response = yield (0, _inquirer.prompt)([{ name: 'token', message: 'GitHub Token', type: 'input' }]);
        Object.assign(argv, response);
      }

      const spinner = (0, _ora2.default)({
        text: 'Checking if the token is valid',
        color: 'magenta'
      }).start();

      try {
        yield _github2.default.getUser(argv.token);
      } catch (err) {
        spinner.fail(`Token invalid`);
        throw err.err || err.body || err;
      }

      spinner.text = 'Saving the token in the keychain';
      yield _auth2.default.saveToken(argv.token);

      spinner.succeed('Done!');
    })();
  }
});