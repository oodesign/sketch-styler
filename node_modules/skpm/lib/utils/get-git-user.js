'use strict';

exports.__esModule = true;

var _crossSpawnPromise = require('cross-spawn-promise');

var _crossSpawnPromise2 = _interopRequireDefault(_crossSpawnPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = (() => {
  var _ref = _asyncToGenerator(function* (defaultEmail, defaultUsername) {
    const [email, username] = yield Promise.all([(0, _crossSpawnPromise2.default)('git', ['config', 'user.email']).catch(function () {
      return defaultEmail;
    }), (0, _crossSpawnPromise2.default)('git', ['config', 'user.name']).catch(function () {
      return defaultUsername;
    })]);

    return {
      email: email && email.toString(),
      username: username && username.toString()
    };
  });

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
})();